<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="az.rock.flyjob.auth.dataAccess.repository.abstracts.query.batis.AbstractUserComposeQueryBatisRepository">

    <sql id="user_profile_result_sql">
        usr.uuid as uuid,
       usr.version as version,
       usr.row_status as rowStatus,
       usr.process_status as processStatus,
       usr.first_name as firstName,
       usr.last_name as lastName,
       usr.username as username,
       usr.title as title,
       usr.biography as biography,
       usr.gender as gender,
       usr.user_type as userType,
       usr.timezone as timezone,
       count(fr.uuid) as followCount,
       count(nr.uuid) as networkCount
    </sql>


    <resultMap id="my_profile_result_map"
               type="az.rock.flyjob.auth.model.query.MyProfileQueryRecord">
        <id property="userId"
            column="uuid"
            typeHandler="az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler"/>
        <result property="version" column="version"/>
        <result property="rowStatus" column="rowStatus"/>
        <result property="processStatus" column="processStatus"/>
        <result property="firstName" column="firstName"/>
        <result property="lastName" column="lastName"/>
        <result property="username" column="username"/>
        <result property="title" column="title"/>
        <result property="biography" column="biography"/>
        <result property="gender" column="gender"/>
        <result property="userType" column="userType"/>
        <result property="timezone" column="timezone"/>
        <result property="followCount" column="followCount"/>
        <result property="networkCount" column="networkCount"/>
    </resultMap>


    <select id="findUserProfileById" resultType="az.rock.flyjob.auth.model.query.MyProfileQueryRecord">
        select
            usr.uuid                                   as uuid,
            usr.version                                as version,
            usr.row_status                             as rowStatus,
            usr.process_status                         as processStatus,
            usr.first_name                             as firstName,
            usr.last_name                              as lastName,
            usr.username                               as username,
            usr.title                                  as title,
            usr.biography                              as biography,
            usr.gender                                 as gender,
            usr.user_type                              as userType,
            usr.timezone                               as timezone,
            (select count(frr.uuid)
             from network.follow_relation frr
             where frr.row_status = 'ACTIVE'
               and frr.follow_status = 'ACCEPTED'
               and frr.process_status = 'COMPLETED'
               and frr.followed_user_id = usr.uuid)    as followCount,
            (select count(nrr.uuid)
             from network.network_relation nrr
             where nrr.process_status = 'COMPLETED'
                 and nrr.row_status = 'ACTIVE'
                 and network_status = 'ACCEPTED'
                 and block_reason_status = 'UNKNOWN'
                 and (nrr.request_owner_id = usr.uuid)
                or (nrr.request_target_id = usr.uuid)) as networkCount
        from auth.users usr
        where usr.uuid = #{userId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
    </select>

    <select id="findAnyUserProfileById" resultType="az.rock.flyjob.auth.model.query.AnyProfileQueryRecord">
        select
            usr.uuid                                   as uuid,
            usr.version                                as version,
            usr.row_status                             as rowStatus,
            usr.process_status                         as processStatus,
            usr.first_name                             as firstName,
            usr.last_name                              as lastName,
            usr.username                               as username,
            usr.title                                  as title,
            usr.biography                              as biography,
            usr.gender                                 as gender,
            usr.user_type                              as userType,
            usr.timezone                               as timezone,
            (select count(frr.uuid)
             from network.follow_relation frr
             where frr.row_status = 'ACTIVE'
               and frr.follow_status = 'ACCEPTED'
               and frr.process_status = 'COMPLETED'
               and frr.followed_user_id = usr.uuid)    as followCount,
            (select count(nrr.uuid)
             from network.network_relation nrr
             where nrr.process_status = 'COMPLETED'
                 and nrr.row_status = 'ACTIVE'
                 and network_status = 'ACCEPTED'
                 and block_reason_status = 'UNKNOWN'
                 and (nrr.request_owner_id = usr.uuid)
                or (nrr.request_target_id = usr.uuid)) as networkCount
        from auth.users usr
        where usr.uuid = #{targetId, typeHandler=az.rock.flyjob.auth.dataAccess.mapper.type.handler.UUIDTypeHandler}
          and not exists(select *
                         from network.block_relation br
                         where br.row_status = 'ACTIVE'
                           and ((br.user_id = #{authId} and br.target_user_id =#{targetId})
                             OR (br.target_user_id = #{authId} and br.user_id = #{targetId})))
          and usr.row_status = 'ACTIVE';
    </select>


    <select id="findAllAnyUserProfilesByIds" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleAnyUserProfileResponse">
        select usr.uuid,
               usr.username,
               usr.first_name,
               usr.last_name,
               usr.title
        from (select *
              from auth.users u
              where u.row_status = 'ACTIVE' and u.uuid in (
                  ''
                  ) ) usr
        where not exists(
                select *
                from network.block_relation br
                where br.row_status = 'ACTIVE'
                  and ((br.user_id = #{authId} and br.target_user_id = usr.uuid)
                    OR (br.target_user_id = #{authId} and br.user_id = usr.uuid))
            );
    </select>

    <select id="findAllMyFollowers" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleFollowerUserResponse">

    </select>

    <select id="findAllMyNetworks" resultType="az.rock.auth.domain.presentation.dto.response.user.SimpleNetworkUserResponse">

    </select>


</mapper>