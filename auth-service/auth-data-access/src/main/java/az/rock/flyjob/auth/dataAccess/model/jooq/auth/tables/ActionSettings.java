/*
 * This file is generated by jOOQ.
 */
package az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables;


import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Auth;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Keys;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables.records.ActionSettingsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActionSettings extends TableImpl<ActionSettingsRecord> {

    private static final long serialVersionUID = 1090007611;

    /**
     * The reference instance of <code>auth.action_settings</code>
     */
    public static final ActionSettings ACTİON_SETTİNGS = new ActionSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ActionSettingsRecord> getRecordType() {
        return ActionSettingsRecord.class;
    }

    /**
     * The column <code>auth.action_settings.uuid</code>.
     */
    public final TableField<ActionSettingsRecord, UUID> UUİD = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.version</code>.
     */
    public final TableField<ActionSettingsRecord, Long> VERSİON = createField(DSL.name("version"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>auth.action_settings.process_status</code>.
     */
    public final TableField<ActionSettingsRecord, String> PROCESS_STATUS = createField(DSL.name("process_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.row_status</code>.
     */
    public final TableField<ActionSettingsRecord, String> ROW_STATUS = createField(DSL.name("row_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.created_date</code>.
     */
    public final TableField<ActionSettingsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.modification_date</code>.
     */
    public final TableField<ActionSettingsRecord, LocalDateTime> MODİFİCATİON_DATE = createField(DSL.name("modification_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>auth.action_settings.user_uuid</code>.
     */
    public final TableField<ActionSettingsRecord, UUID> USER_UUİD = createField(DSL.name("user_uuid"), org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>auth.action_settings.share_updates_when_i_do_something</code>.
     */
    public final TableField<ActionSettingsRecord, Boolean> SHARE_UPDATES_WHEN_İ_DO_SOMETHİNG = createField(DSL.name("share_updates_when_i_do_something"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.notify_me_when_somebody_speaks_about_me</code>.
     */
    public final TableField<ActionSettingsRecord, Boolean> NOTİFY_ME_WHEN_SOMEBODY_SPEAKS_ABOUT_ME = createField(DSL.name("notify_me_when_somebody_speaks_about_me"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.notify_me_when_somebody_speaks_about_my_posts</code>.
     */
    public final TableField<ActionSettingsRecord, Boolean> NOTİFY_ME_WHEN_SOMEBODY_SPEAKS_ABOUT_MY_POSTS = createField(DSL.name("notify_me_when_somebody_speaks_about_my_posts"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.action_settings.who_can_follow_me</code>.
     */
    public final TableField<ActionSettingsRecord, Integer> WHO_CAN_FOLLOW_ME = createField(DSL.name("who_can_follow_me"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>auth.action_settings</code> table reference
     */
    public ActionSettings() {
        this(DSL.name("action_settings"), null);
    }

    /**
     * Create an aliased <code>auth.action_settings</code> table reference
     */
    public ActionSettings(String alias) {
        this(DSL.name(alias), ACTİON_SETTİNGS);
    }

    /**
     * Create an aliased <code>auth.action_settings</code> table reference
     */
    public ActionSettings(Name alias) {
        this(alias, ACTİON_SETTİNGS);
    }

    private ActionSettings(Name alias, Table<ActionSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private ActionSettings(Name alias, Table<ActionSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ActionSettings(Table<O> child, ForeignKey<O, ActionSettingsRecord> key) {
        super(child, key, ACTİON_SETTİNGS);
    }

    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    @Override
    public UniqueKey<ActionSettingsRecord> getPrimaryKey() {
        return Keys.PK_ACTİON_SETTİNGS;
    }

    @Override
    public List<UniqueKey<ActionSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<ActionSettingsRecord>>asList(Keys.PK_ACTİON_SETTİNGS);
    }

    @Override
    public List<ForeignKey<ActionSettingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ActionSettingsRecord, ?>>asList(Keys.ACTİON_SETTİNGS__FK_ACTİON_SETTİNGS_ON_USER_UUİD);
    }

    public Users users() {
        return new Users(this, Keys.ACTİON_SETTİNGS__FK_ACTİON_SETTİNGS_ON_USER_UUİD);
    }

    @Override
    public ActionSettings as(String alias) {
        return new ActionSettings(DSL.name(alias), this);
    }

    @Override
    public ActionSettings as(Name alias) {
        return new ActionSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ActionSettings rename(String name) {
        return new ActionSettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ActionSettings rename(Name name) {
        return new ActionSettings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, Long, String, String, LocalDateTime, LocalDateTime, UUID, Boolean, Boolean, Boolean, Integer> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
