/*
 * This file is generated by jOOQ.
 */
package az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables.records;


import az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables.DetailRole;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DetailRoleRecord extends UpdatableRecordImpl<DetailRoleRecord> implements Record2<UUID, UUID> {

    private static final long serialVersionUID = 1237011535;

    /**
     * Setter for <code>auth.detail_role.detail_uuid</code>.
     */
    public void setDetailUuid(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>auth.detail_role.detail_uuid</code>.
     */
    public UUID getDetailUuid() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>auth.detail_role.role_uuid</code>.
     */
    public void setRoleUuid(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>auth.detail_role.role_uuid</code>.
     */
    public UUID getRoleUuid() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<UUID, UUID> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<UUID, UUID> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return DetailRole.DETAİL_ROLE.DETAİL_UUİD;
    }

    @Override
    public Field<UUID> field2() {
        return DetailRole.DETAİL_ROLE.ROLE_UUİD;
    }

    @Override
    public UUID component1() {
        return getDetailUuid();
    }

    @Override
    public UUID component2() {
        return getRoleUuid();
    }

    @Override
    public UUID value1() {
        return getDetailUuid();
    }

    @Override
    public UUID value2() {
        return getRoleUuid();
    }

    @Override
    public DetailRoleRecord value1(UUID value) {
        setDetailUuid(value);
        return this;
    }

    @Override
    public DetailRoleRecord value2(UUID value) {
        setRoleUuid(value);
        return this;
    }

    @Override
    public DetailRoleRecord values(UUID value1, UUID value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DetailRoleRecord
     */
    public DetailRoleRecord() {
        super(DetailRole.DETAİL_ROLE);
    }

    /**
     * Create a detached, initialised DetailRoleRecord
     */
    public DetailRoleRecord(UUID detailUuid, UUID roleUuid) {
        super(DetailRole.DETAİL_ROLE);

        set(0, detailUuid);
        set(1, roleUuid);
    }
}
