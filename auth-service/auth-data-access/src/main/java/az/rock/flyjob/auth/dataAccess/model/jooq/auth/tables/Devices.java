/*
 * This file is generated by jOOQ.
 */
package az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables;


import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Auth;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Keys;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables.records.DevicesRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row22;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Devices extends TableImpl<DevicesRecord> {

    private static final long serialVersionUID = 84632052;

    /**
     * The reference instance of <code>auth.devices</code>
     */
    public static final Devices DEVİCES = new Devices();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DevicesRecord> getRecordType() {
        return DevicesRecord.class;
    }

    /**
     * The column <code>auth.devices.uuid</code>.
     */
    public final TableField<DevicesRecord, UUID> UUİD = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>auth.devices.version</code>.
     */
    public final TableField<DevicesRecord, Long> VERSİON = createField(DSL.name("version"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>auth.devices.process_status</code>.
     */
    public final TableField<DevicesRecord, String> PROCESS_STATUS = createField(DSL.name("process_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.devices.row_status</code>.
     */
    public final TableField<DevicesRecord, String> ROW_STATUS = createField(DSL.name("row_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.devices.created_date</code>.
     */
    public final TableField<DevicesRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>auth.devices.modification_date</code>.
     */
    public final TableField<DevicesRecord, LocalDateTime> MODİFİCATİON_DATE = createField(DSL.name("modification_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>auth.devices.user_uuid</code>.
     */
    public final TableField<DevicesRecord, UUID> USER_UUİD = createField(DSL.name("user_uuid"), org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>auth.devices.device_name</code>.
     */
    public final TableField<DevicesRecord, String> DEVİCE_NAME = createField(DSL.name("device_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.device_model</code>.
     */
    public final TableField<DevicesRecord, String> DEVİCE_MODEL = createField(DSL.name("device_model"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.device_manufacturer</code>.
     */
    public final TableField<DevicesRecord, String> DEVİCE_MANUFACTURER = createField(DSL.name("device_manufacturer"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.operation_system</code>.
     */
    public final TableField<DevicesRecord, String> OPERATİON_SYSTEM = createField(DSL.name("operation_system"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.device_os_version</code>.
     */
    public final TableField<DevicesRecord, String> DEVİCE_OS_VERSİON = createField(DSL.name("device_os_version"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.browser_name</code>.
     */
    public final TableField<DevicesRecord, String> BROWSER_NAME = createField(DSL.name("browser_name"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.ip_address</code>.
     */
    public final TableField<DevicesRecord, String> İP_ADDRESS = createField(DSL.name("ip_address"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>auth.devices.salt</code>.
     */
    public final TableField<DevicesRecord, String> SALT = createField(DSL.name("salt"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>auth.devices.hash</code>.
     */
    public final TableField<DevicesRecord, String> HASH = createField(DSL.name("hash"), org.jooq.impl.SQLDataType.VARCHAR(1000), this, "");

    /**
     * The column <code>auth.devices.verification_code</code>.
     */
    public final TableField<DevicesRecord, String> VERİFİCATİON_CODE = createField(DSL.name("verification_code"), org.jooq.impl.SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>auth.devices.verification_code_expire_date</code>.
     */
    public final TableField<DevicesRecord, LocalDateTime> VERİFİCATİON_CODE_EXPİRE_DATE = createField(DSL.name("verification_code_expire_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>auth.devices.verification_code_send_date</code>.
     */
    public final TableField<DevicesRecord, LocalDateTime> VERİFİCATİON_CODE_SEND_DATE = createField(DSL.name("verification_code_send_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>auth.devices.verification_code_send_count</code>.
     */
    public final TableField<DevicesRecord, BigDecimal> VERİFİCATİON_CODE_SEND_COUNT = createField(DSL.name("verification_code_send_count"), org.jooq.impl.SQLDataType.NUMERIC, this, "");

    /**
     * The column <code>auth.devices.is_verified</code>.
     */
    public final TableField<DevicesRecord, Boolean> İS_VERİFİED = createField(DSL.name("is_verified"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>auth.devices.is_primary</code>.
     */
    public final TableField<DevicesRecord, Boolean> İS_PRİMARY = createField(DSL.name("is_primary"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>auth.devices</code> table reference
     */
    public Devices() {
        this(DSL.name("devices"), null);
    }

    /**
     * Create an aliased <code>auth.devices</code> table reference
     */
    public Devices(String alias) {
        this(DSL.name(alias), DEVİCES);
    }

    /**
     * Create an aliased <code>auth.devices</code> table reference
     */
    public Devices(Name alias) {
        this(alias, DEVİCES);
    }

    private Devices(Name alias, Table<DevicesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Devices(Name alias, Table<DevicesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Devices(Table<O> child, ForeignKey<O, DevicesRecord> key) {
        super(child, key, DEVİCES);
    }

    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    @Override
    public UniqueKey<DevicesRecord> getPrimaryKey() {
        return Keys.PK_DEVİCES;
    }

    @Override
    public List<UniqueKey<DevicesRecord>> getKeys() {
        return Arrays.<UniqueKey<DevicesRecord>>asList(Keys.PK_DEVİCES);
    }

    @Override
    public List<ForeignKey<DevicesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<DevicesRecord, ?>>asList(Keys.DEVİCES__FK_DEVİCES_ON_USER_UUİD);
    }

    public Users users() {
        return new Users(this, Keys.DEVİCES__FK_DEVİCES_ON_USER_UUİD);
    }

    @Override
    public Devices as(String alias) {
        return new Devices(DSL.name(alias), this);
    }

    @Override
    public Devices as(Name alias) {
        return new Devices(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Devices rename(String name) {
        return new Devices(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Devices rename(Name name) {
        return new Devices(name, null);
    }

    // -------------------------------------------------------------------------
    // Row22 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row22<UUID, Long, String, String, LocalDateTime, LocalDateTime, UUID, String, String, String, String, String, String, String, String, String, String, LocalDateTime, LocalDateTime, BigDecimal, Boolean, Boolean> fieldsRow() {
        return (Row22) super.fieldsRow();
    }
}
