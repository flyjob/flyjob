/*
 * This file is generated by jOOQ.
 */
package az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables;


import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Auth;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.Keys;
import az.rock.flyjob.auth.dataAccess.model.jooq.auth.tables.records.UserSettingsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row19;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSettings extends TableImpl<UserSettingsRecord> {

    private static final long serialVersionUID = -1581041114;

    /**
     * The reference instance of <code>auth.user_settings</code>
     */
    public static final UserSettings USER_SETTİNGS = new UserSettings();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserSettingsRecord> getRecordType() {
        return UserSettingsRecord.class;
    }

    /**
     * The column <code>auth.user_settings.uuid</code>.
     */
    public final TableField<UserSettingsRecord, UUID> UUİD = createField(DSL.name("uuid"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.version</code>.
     */
    public final TableField<UserSettingsRecord, Long> VERSİON = createField(DSL.name("version"), org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>auth.user_settings.process_status</code>.
     */
    public final TableField<UserSettingsRecord, String> PROCESS_STATUS = createField(DSL.name("process_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.row_status</code>.
     */
    public final TableField<UserSettingsRecord, String> ROW_STATUS = createField(DSL.name("row_status"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.created_date</code>.
     */
    public final TableField<UserSettingsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.modification_date</code>.
     */
    public final TableField<UserSettingsRecord, LocalDateTime> MODİFİCATİON_DATE = createField(DSL.name("modification_date"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>auth.user_settings.user_uuid</code>.
     */
    public final TableField<UserSettingsRecord, UUID> USER_UUİD = createField(DSL.name("user_uuid"), org.jooq.impl.SQLDataType.UUID, this, "");

    /**
     * The column <code>auth.user_settings.language</code>.
     */
    public final TableField<UserSettingsRecord, String> LANGUAGE = createField(DSL.name("language"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>auth.user_settings.is_active_dark_mode</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_ACTİVE_DARK_MODE = createField(DSL.name("is_active_dark_mode"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>auth.user_settings.is_active_email_notification</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_ACTİVE_EMAİL_NOTİFİCATİON = createField(DSL.name("is_active_email_notification"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>auth.user_settings.is_active_sms_notification</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_ACTİVE_SMS_NOTİFİCATİON = createField(DSL.name("is_active_sms_notification"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>auth.user_settings.is_active_push_notification</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_ACTİVE_PUSH_NOTİFİCATİON = createField(DSL.name("is_active_push_notification"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>auth.user_settings.is_active_two_factor_authentication</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_ACTİVE_TWO_FACTOR_AUTHENTİCATİON = createField(DSL.name("is_active_two_factor_authentication"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>auth.user_settings.is_visible_location</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_LOCATİON = createField(DSL.name("is_visible_location"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.is_visible_online_status</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_ONLİNE_STATUS = createField(DSL.name("is_visible_online_status"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.is_visible_last_seen</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_LAST_SEEN = createField(DSL.name("is_visible_last_seen"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.is_visible_profile_picture</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_PROFİLE_PİCTURE = createField(DSL.name("is_visible_profile_picture"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.is_visible_email</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_EMAİL = createField(DSL.name("is_visible_email"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>auth.user_settings.is_visible_resume</code>.
     */
    public final TableField<UserSettingsRecord, Boolean> İS_VİSİBLE_RESUME = createField(DSL.name("is_visible_resume"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>auth.user_settings</code> table reference
     */
    public UserSettings() {
        this(DSL.name("user_settings"), null);
    }

    /**
     * Create an aliased <code>auth.user_settings</code> table reference
     */
    public UserSettings(String alias) {
        this(DSL.name(alias), USER_SETTİNGS);
    }

    /**
     * Create an aliased <code>auth.user_settings</code> table reference
     */
    public UserSettings(Name alias) {
        this(alias, USER_SETTİNGS);
    }

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserSettings(Name alias, Table<UserSettingsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserSettings(Table<O> child, ForeignKey<O, UserSettingsRecord> key) {
        super(child, key, USER_SETTİNGS);
    }

    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    @Override
    public UniqueKey<UserSettingsRecord> getPrimaryKey() {
        return Keys.PK_USER_SETTİNGS;
    }

    @Override
    public List<UniqueKey<UserSettingsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserSettingsRecord>>asList(Keys.PK_USER_SETTİNGS);
    }

    @Override
    public List<ForeignKey<UserSettingsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserSettingsRecord, ?>>asList(Keys.USER_SETTİNGS__FK_USER_SETTİNGS_ON_USER_UUİD);
    }

    public Users users() {
        return new Users(this, Keys.USER_SETTİNGS__FK_USER_SETTİNGS_ON_USER_UUİD);
    }

    @Override
    public UserSettings as(String alias) {
        return new UserSettings(DSL.name(alias), this);
    }

    @Override
    public UserSettings as(Name alias) {
        return new UserSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(String name) {
        return new UserSettings(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserSettings rename(Name name) {
        return new UserSettings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row19<UUID, Long, String, String, LocalDateTime, LocalDateTime, UUID, String, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row19) super.fieldsRow();
    }
}
