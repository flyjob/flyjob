<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="az.rock.flyjob.js.dataaccess.repository.abstracts.query.batis.ExperienceBatisRepository">
  <resultMap id="BaseResultMap" type="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceCompose">
    <id column="uuid" property="uuid"
        typeHandler="az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler"/>
    <result column="version" jdbcType="BIGINT" property="version" />
    <result column="process_status" jdbcType="VARCHAR" property="processStatus" />
    <result column="row_status" jdbcType="VARCHAR" property="rowStatus" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="modification_date" jdbcType="TIMESTAMP" property="modificationDate" />
    <result column="resume_uuid" property="resumeUuid"
            typeHandler="az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler"/>
    <result column="access_modifier" jdbcType="VARCHAR" property="accessModifier" />
    <result column="order_number" jdbcType="INTEGER" property="orderNumber" />
    <result column="employer" jdbcType="VARCHAR" property="employer" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="job_title" jdbcType="VARCHAR" property="jobTitle" />
    <result column="city_id" jdbcType="OTHER" property="cityId" />
    <result column="working_type" jdbcType="VARCHAR" property="workingType" />
    <result column="working_time_type" jdbcType="VARCHAR" property="workingTimeType" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    uuid, version, process_status, row_status, created_date, modification_date, resume_uuid, 
    access_modifier, order_number, employer, link, job_title, city_id, working_type, 
    working_time_type, description, start_date, end_date
  </sql>
  <select id="selectByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceComposeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume.experiences
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageable != null">
      OFFSET #{pageable.offset} ROWS
      FETCH NEXT #{pageable.limit} ROWS ONLY
    </if>
  </select>
  <select id="selectFirstByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceComposeExample"
          resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from resume.experiences
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Object" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume.experiences
    where uuid = #{uuid,typeHandler=az.rock.flyjob.js.dataaccess.model.type.handler.UUIDTypeHandler}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Object">
    delete from resume.experiences
    where uuid = #{uuid,jdbcType=OTHER}
  </delete>
  <delete id="deleteByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceComposeExample">
    delete from resume.experiences
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceCompose">
    insert into resume.experiences (uuid, version, process_status, 
      row_status, created_date, modification_date, 
      resume_uuid, access_modifier, order_number, 
      employer, link, job_title, 
      city_id, working_type, working_time_type, 
      description, start_date, end_date
      )
    values (#{uuid,jdbcType=OTHER}, #{version,jdbcType=BIGINT}, #{processStatus,jdbcType=VARCHAR}, 
      #{rowStatus,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{modificationDate,jdbcType=TIMESTAMP}, 
      #{resumeUuid,jdbcType=OTHER}, #{accessModifier,jdbcType=VARCHAR}, #{orderNumber,jdbcType=INTEGER}, 
      #{employer,jdbcType=VARCHAR}, #{link,jdbcType=VARCHAR}, #{jobTitle,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=OTHER}, #{workingType,jdbcType=VARCHAR}, #{workingTimeType,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceCompose">
    insert into resume.experiences
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="processStatus != null">
        process_status,
      </if>
      <if test="rowStatus != null">
        row_status,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="modificationDate != null">
        modification_date,
      </if>
      <if test="resumeUuid != null">
        resume_uuid,
      </if>
      <if test="accessModifier != null">
        access_modifier,
      </if>
      <if test="orderNumber != null">
        order_number,
      </if>
      <if test="employer != null">
        employer,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="jobTitle != null">
        job_title,
      </if>
      <if test="cityId != null">
        city_id,
      </if>
      <if test="workingType != null">
        working_type,
      </if>
      <if test="workingTimeType != null">
        working_time_type,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=OTHER},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
      <if test="processStatus != null">
        #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="rowStatus != null">
        #{rowStatus,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modificationDate != null">
        #{modificationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resumeUuid != null">
        #{resumeUuid,jdbcType=OTHER},
      </if>
      <if test="accessModifier != null">
        #{accessModifier,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="employer != null">
        #{employer,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        #{cityId,jdbcType=OTHER},
      </if>
      <if test="workingType != null">
        #{workingType,jdbcType=VARCHAR},
      </if>
      <if test="workingTimeType != null">
        #{workingTimeType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceComposeExample" resultType="java.lang.Long">
    select count(*) from resume.experiences
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume.experiences
    <set>
      <if test="record.uuid != null">
        uuid = #{record.uuid,jdbcType=OTHER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
      <if test="record.processStatus != null">
        process_status = #{record.processStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.rowStatus != null">
        row_status = #{record.rowStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modificationDate != null">
        modification_date = #{record.modificationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resumeUuid != null">
        resume_uuid = #{record.resumeUuid,jdbcType=OTHER},
      </if>
      <if test="record.accessModifier != null">
        access_modifier = #{record.accessModifier,jdbcType=VARCHAR},
      </if>
      <if test="record.orderNumber != null">
        order_number = #{record.orderNumber,jdbcType=INTEGER},
      </if>
      <if test="record.employer != null">
        employer = #{record.employer,jdbcType=VARCHAR},
      </if>
      <if test="record.link != null">
        link = #{record.link,jdbcType=VARCHAR},
      </if>
      <if test="record.jobTitle != null">
        job_title = #{record.jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null">
        city_id = #{record.cityId,jdbcType=OTHER},
      </if>
      <if test="record.workingType != null">
        working_type = #{record.workingType,jdbcType=VARCHAR},
      </if>
      <if test="record.workingTimeType != null">
        working_time_type = #{record.workingTimeType,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume.experiences
    set uuid = #{record.uuid,jdbcType=OTHER},
      version = #{record.version,jdbcType=BIGINT},
      process_status = #{record.processStatus,jdbcType=VARCHAR},
      row_status = #{record.rowStatus,jdbcType=VARCHAR},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      modification_date = #{record.modificationDate,jdbcType=TIMESTAMP},
      resume_uuid = #{record.resumeUuid,jdbcType=OTHER},
      access_modifier = #{record.accessModifier,jdbcType=VARCHAR},
      order_number = #{record.orderNumber,jdbcType=INTEGER},
      employer = #{record.employer,jdbcType=VARCHAR},
      link = #{record.link,jdbcType=VARCHAR},
      job_title = #{record.jobTitle,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=OTHER},
      working_type = #{record.workingType,jdbcType=VARCHAR},
      working_time_type = #{record.workingTimeType,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceCompose">
    update resume.experiences
    <set>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="processStatus != null">
        process_status = #{processStatus,jdbcType=VARCHAR},
      </if>
      <if test="rowStatus != null">
        row_status = #{rowStatus,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modificationDate != null">
        modification_date = #{modificationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="resumeUuid != null">
        resume_uuid = #{resumeUuid,jdbcType=OTHER},
      </if>
      <if test="accessModifier != null">
        access_modifier = #{accessModifier,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null">
        order_number = #{orderNumber,jdbcType=INTEGER},
      </if>
      <if test="employer != null">
        employer = #{employer,jdbcType=VARCHAR},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="jobTitle != null">
        job_title = #{jobTitle,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null">
        city_id = #{cityId,jdbcType=OTHER},
      </if>
      <if test="workingType != null">
        working_type = #{workingType,jdbcType=VARCHAR},
      </if>
      <if test="workingTimeType != null">
        working_time_type = #{workingTimeType,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=OTHER}
  </update>
  <update id="updateByPrimaryKey" parameterType="az.rock.flyjob.js.dataaccess.model.batis.model.ExperienceCompose">
    update resume.experiences
    set version = #{version,jdbcType=BIGINT},
      process_status = #{processStatus,jdbcType=VARCHAR},
      row_status = #{rowStatus,jdbcType=VARCHAR},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      modification_date = #{modificationDate,jdbcType=TIMESTAMP},
      resume_uuid = #{resumeUuid,jdbcType=OTHER},
      access_modifier = #{accessModifier,jdbcType=VARCHAR},
      order_number = #{orderNumber,jdbcType=INTEGER},
      employer = #{employer,jdbcType=VARCHAR},
      link = #{link,jdbcType=VARCHAR},
      job_title = #{jobTitle,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=OTHER},
      working_type = #{workingType,jdbcType=VARCHAR},
      working_time_type = #{workingTimeType,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE}
    where uuid = #{uuid,jdbcType=OTHER}
  </update>
</mapper>